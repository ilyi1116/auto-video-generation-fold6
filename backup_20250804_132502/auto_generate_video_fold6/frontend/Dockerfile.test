# 前端測試專用 Dockerfile
# 針對 TDD 工作流程優化

FROM node:18-alpine

WORKDIR /app

# 安裝系統依賴
RUN apk add --no-cache \
    chromium \
    nss \
    freetype \
    freetype-dev \
    harfbuzz \
    ca-certificates \
    ttf-freefont

# 設定 Chromium 環境變數（用於 Playwright）
ENV CHROMIUM_PATH=/usr/bin/chromium-browser
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
ENV PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser

# 複製 package.json 和 package-lock.json
COPY package*.json ./

# 安裝依賴（包含開發依賴）
RUN npm ci

# 創建非特權用戶
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nextjs -u 1001

# 複製專案檔案並設置權限
COPY . .
RUN chown -R nextjs:nodejs /app

# 建立測試腳本
RUN echo '#!/bin/sh\n\
echo "🧪 執行前端 TDD 測試套件..."\n\
echo ""\n\
echo "📋 1. 執行單元測試..."\n\
npm run test:unit || exit 1\n\
echo ""\n\
echo "📋 2. 檢查測試覆蓋率 (≥90%)..."\n\
npm run test:coverage || exit 1\n\
echo ""\n\
echo "📋 3. 執行組件測試..."\n\
npm run test:component || exit 1\n\
echo ""\n\
echo "📋 4. 執行整合測試..."\n\
npm run test:integration || exit 1\n\
echo ""\n\
echo "📋 5. 執行 E2E 測試..."\n\
npm run test:e2e:headless || exit 1\n\
echo ""\n\
echo "✅ 所有前端測試通過！"\n\
' > /app/run-tests.sh && chmod +x /app/run-tests.sh

# 切換到非特權用戶
USER nextjs

# 預設執行測試
CMD ["/app/run-tests.sh"]

# 健康檢查
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD node --version || exit 1