input {
  # 接收來自應用程式的日誌
  beats {
    port => 5044
  }
  
  # 接收來自 Docker 的日誌
  http {
    port => 5001
    codec => "json"
  }
  
  # 監聽 syslog
  syslog {
    port => 5514
  }
}

filter {
  # 解析 JSON 格式的日誌
  if [fields][logtype] == "application" {
    json {
      source => "message"
    }
    
    # 為不同服務添加標籤
    if [service] {
      mutate {
        add_tag => [ "service-%{service}" ]
      }
    }
    
    # 解析錯誤級別
    if [level] {
      mutate {
        add_field => { "log_level" => "%{level}" }
      }
    }
    
    # 解析時間戳
    date {
      match => [ "timestamp", "ISO8601" ]
    }
  }
  
  # 解析 Nginx 訪問日誌
  if [fields][logtype] == "nginx" {
    grok {
      match => { 
        "message" => "%{COMBINEDAPACHELOG}" 
      }
    }
    
    # 解析用戶代理
    if [agent] {
      useragent {
        source => "agent"
        target => "user_agent"
      }
    }
    
    # 轉換回應時間為數字
    if [response_time] {
      mutate {
        convert => { "response_time" => "float" }
      }
    }
  }
  
  # 解析應用程式錯誤日誌
  if [fields][logtype] == "error" {
    # 提取錯誤類型和堆疊跟蹤
    grok {
      match => { 
        "message" => "(?<error_type>\w+Error): (?<error_message>.*?)(\n(?<stack_trace>.*))?$" 
      }
    }
    
    mutate {
      add_tag => [ "error", "needs_attention" ]
    }
  }
  
  # 安全事件檢測
  if [message] =~ /failed login|unauthorized|403|401/ {
    mutate {
      add_tag => [ "security", "auth_failure" ]
      add_field => { "alert_level" => "warning" }
    }
  }
  
  # 效能指標擷取
  if [message] =~ /response_time/ {
    grok {
      match => { 
        "message" => "response_time=(?<response_time_ms>\d+)" 
      }
    }
    
    if [response_time_ms] {
      mutate {
        convert => { "response_time_ms" => "integer" }
      }
      
      # 標記慢請求
      if [response_time_ms] and [response_time_ms] > 1000 {
        mutate {
          add_tag => [ "slow_request" ]
        }
      }
    }
  }
  
  # 清理無用欄位
  mutate {
    remove_field => [ "host", "agent", "@version" ]
  }
}

output {
  # 輸出到 Elasticsearch
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "auto-video-logs-%{+YYYY.MM.dd}"
    
    # 根據日誌類型創建不同的索引
    if [fields][logtype] == "error" {
      index => "auto-video-errors-%{+YYYY.MM.dd}"
    } else if [fields][logtype] == "security" {
      index => "auto-video-security-%{+YYYY.MM.dd}"
    } else if [fields][logtype] == "performance" {
      index => "auto-video-performance-%{+YYYY.MM.dd}"
    }
  }
  
  # 輸出關鍵錯誤到檔案以供備份
  if "error" in [tags] {
    file {
      path => "/var/log/auto-video/critical-errors.log"
      codec => line { format => "%{timestamp} [%{service}] %{level}: %{message}" }
    }
  }
  
  # 安全事件也輸出到檔案
  if "security" in [tags] {
    file {
      path => "/var/log/auto-video/security-events.log"
      codec => line { format => "%{timestamp} [SECURITY] %{message}" }
    }
  }
  
  # 除錯輸出（開發環境）
  if [fields][environment] == "development" {
    stdout {
      codec => rubydebug
    }
  }
}