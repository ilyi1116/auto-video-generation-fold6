"""Add crawler_task_results table

Revision ID: 20250803_003
Revises: 20250803_002
Create Date: 2025-08-03 14:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '20250803_003'
down_revision = '20250803_002'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('crawler_task_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('run_id', sa.String(length=100), nullable=False),
    sa.Column('url', sa.String(length=2000), nullable=True),
    sa.Column('title', sa.String(length=500), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('matched_keywords', sa.Text(), nullable=True),
    sa.Column('page_number', sa.Integer(), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('scraped_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['crawler_tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_crawler_task_results_id'), 'crawler_task_results', ['id'], unique=False)
    op.create_index('ix_crawler_task_results_task_id', 'crawler_task_results', ['task_id'], unique=False)
    op.create_index('ix_crawler_task_results_run_id', 'crawler_task_results', ['run_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_crawler_task_results_run_id', table_name='crawler_task_results')
    op.drop_index('ix_crawler_task_results_task_id', table_name='crawler_task_results')
    op.drop_index(op.f('ix_crawler_task_results_id'), table_name='crawler_task_results')
    op.drop_table('crawler_task_results')
    # ### end Alembic commands ###