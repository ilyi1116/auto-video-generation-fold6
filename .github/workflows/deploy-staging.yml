name: Deploy to Staging

on:
  push:
    branches: [ develop ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy-staging:
    name: Deploy to Staging Environment
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build staging images
        run: |
          # Build images with staging tag
          docker-compose -f docker-compose.yml build
          
          # Tag for staging
          docker tag auto-video-generation_api-gateway:latest ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/api-gateway:staging
          docker tag auto-video-generation_auth-service:latest ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/auth-service:staging

      - name: Push staging images
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/api-gateway:staging
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/auth-service:staging

      - name: Deploy to staging server
        run: |
          echo "ðŸš€ Deploying to staging environment..."
          # This would typically use SSH to deploy to staging server
          # or use cloud provider's deployment tools
          
      - name: Run smoke tests
        run: |
          echo "ðŸ§ª Running smoke tests on staging..."
          sleep 10
          # curl -f https://staging.yourdomain.com/health
          
      - name: Notify team
        if: always()
        run: |
          echo "ðŸ“¢ Staging deployment ${{ job.status }}"