# Auto Video System Nginx 負載平衡配置
# 高可用性和效能優化的負載平衡器設定

user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 日誌格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for" '
                   'rt=$request_time uct="$upstream_connect_time" '
                   'uht="$upstream_header_time" urt="$upstream_response_time"';

    log_format performance '$time_local $remote_addr $host $request_uri '
                          '$status $body_bytes_sent $request_time '
                          '$upstream_response_time $upstream_addr $http_user_agent';

    access_log /var/log/nginx/access.log main;
    access_log /var/log/nginx/performance.log performance;

    # 基本效能設定
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    reset_timedout_connection on;
    client_body_timeout 10;
    send_timeout 2;
    
    # 緩衝區設定
    client_max_body_size 100M;
    client_body_buffer_size 128k;
    client_header_buffer_size 3m;
    large_client_header_buffers 4 256k;
    output_buffers 1 32k;
    postpone_output 1460;

    # Gzip 壓縮
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_disable "msie6";
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # 快取設定
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # 速率限制
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    
    # 連接限制
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;

    # SSL 設定
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;

    # 安全標頭
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # ================================
    # 上游服務定義 (負載平衡池)
    # ================================

    # API Gateway 負載平衡
    upstream api_gateway_backend {
        least_conn;
        server api-gateway-1:8000 max_fails=3 fail_timeout=30s weight=1;
        server api-gateway-2:8000 max_fails=3 fail_timeout=30s weight=1;
        server api-gateway-3:8000 max_fails=3 fail_timeout=30s weight=1;
        
        # 健康檢查 (需要 nginx-plus 或 lua 模組)
        # health_check interval=10s fails=3 passes=2 uri=/health;
        
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }

    # 認證服務負載平衡
    upstream auth_service_backend {
        ip_hash;  # 會話黏性
        server auth-service-1:8001 max_fails=2 fail_timeout=20s;
        server auth-service-2:8001 max_fails=2 fail_timeout=20s;
        
        keepalive 16;
    }

    # 資料服務負載平衡
    upstream data_service_backend {
        least_conn;
        server data-service-1:8002 max_fails=3 fail_timeout=30s;
        server data-service-2:8002 max_fails=3 fail_timeout=30s;
        server data-service-3:8002 max_fails=3 fail_timeout=30s;
        
        keepalive 32;
    }

    # 推論服務負載平衡
    upstream inference_service_backend {
        least_conn;
        server inference-service-1:8003 max_fails=2 fail_timeout=60s weight=2;
        server inference-service-2:8003 max_fails=2 fail_timeout=60s weight=2;
        server inference-service-3:8003 max_fails=2 fail_timeout=60s weight=1;  # 較弱的機器
        
        keepalive 16;
        keepalive_timeout 300s;  # AI 推論需要較長時間
    }

    # 影片服務負載平衡
    upstream video_service_backend {
        least_conn;
        server video-service-1:8004 max_fails=3 fail_timeout=45s;
        server video-service-2:8004 max_fails=3 fail_timeout=45s;
        
        keepalive 16;
        keepalive_timeout 180s;
    }

    # 社群媒體服務負載平衡
    upstream social_service_backend {
        round_robin;
        server social-service-1:8006 max_fails=3 fail_timeout=30s;
        server social-service-2:8006 max_fails=3 fail_timeout=30s;
        
        keepalive 16;
    }

    # 前端服務負載平衡
    upstream frontend_backend {
        least_conn;
        server frontend-1:3000 max_fails=2 fail_timeout=20s;
        server frontend-2:3000 max_fails=2 fail_timeout=20s;
        
        keepalive 32;
    }

    # 監控服務 (單例，不需要負載平衡)
    upstream monitoring_backend {
        server grafana:3000;
        keepalive 8;
    }

    # ================================
    # 主要服務器配置
    # ================================

    # HTTP 到 HTTPS 重定向
    server {
        listen 80;
        server_name _;
        return 301 https://$host$request_uri;
    }

    # 主要 HTTPS 服務器
    server {
        listen 443 ssl http2;
        server_name autovideo.local;

        # SSL 證書
        ssl_certificate /etc/nginx/ssl/autovideo.crt;
        ssl_certificate_key /etc/nginx/ssl/autovideo.key;
        ssl_dhparam /etc/nginx/ssl/dhparam.pem;

        # 連接限制
        limit_conn perip 20;
        limit_conn perserver 200;

        # 根路徑
        location = / {
            return 301 https://$host/app/;
        }

        # 前端應用
        location /app/ {
            proxy_pass http://frontend_backend/;
            include /etc/nginx/proxy_params;
            
            # 前端特殊設定
            proxy_cache frontend_cache;
            proxy_cache_valid 200 5m;
            proxy_cache_key "$scheme$proxy_host$request_uri";
            
            # WebSocket 支援
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }

        # API 閘道器
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://api_gateway_backend/;
            include /etc/nginx/proxy_params;
            
            # API 特殊設定
            proxy_read_timeout 60s;
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            
            # 負載平衡標頭
            add_header X-Upstream-Server $upstream_addr always;
            add_header X-Upstream-Response-Time $upstream_response_time always;
        }

        # 認證服務 (高安全性)
        location /api/auth/ {
            limit_req zone=auth burst=10 nodelay;
            
            proxy_pass http://auth_service_backend/;
            include /etc/nginx/proxy_params;
            
            # 認證特殊設定
            proxy_read_timeout 30s;
            proxy_connect_timeout 5s;
        }

        # 檔案上傳
        location /api/upload/ {
            limit_req zone=upload burst=5 nodelay;
            client_max_body_size 100M;
            
            proxy_pass http://data_service_backend/upload/;
            include /etc/nginx/proxy_params;
            
            # 上傳特殊設定
            proxy_read_timeout 300s;
            proxy_connect_timeout 30s;
            proxy_send_timeout 300s;
            proxy_request_buffering off;
        }

        # AI 推論服務
        location /api/inference/ {
            proxy_pass http://inference_service_backend/;
            include /etc/nginx/proxy_params;
            
            # AI 推論特殊設定
            proxy_read_timeout 300s;
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_buffering off;  # 即時串流回應
        }

        # 影片處理服務
        location /api/video/ {
            proxy_pass http://video_service_backend/;
            include /etc/nginx/proxy_params;
            
            # 影片處理特殊設定
            proxy_read_timeout 180s;
            proxy_connect_timeout 20s;
            proxy_send_timeout 60s;
        }

        # 社群媒體服務
        location /api/social/ {
            proxy_pass http://social_service_backend/;
            include /etc/nginx/proxy_params;
            
            # 社群媒體特殊設定
            proxy_read_timeout 60s;
            proxy_connect_timeout 10s;
        }

        # 靜態檔案快取
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf|txt|woff|woff2|ttf|eot|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
            
            # 嘗試本地檔案，否則代理到前端
            try_files $uri @frontend_static;
        }

        location @frontend_static {
            proxy_pass http://frontend_backend;
            include /etc/nginx/proxy_params;
            
            # 靜態檔案快取
            proxy_cache static_cache;
            proxy_cache_valid 200 1d;
            proxy_cache_valid 404 1m;
        }

        # 健康檢查端點
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Nginx 狀態頁面
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
    }

    # 管理界面服務器
    server {
        listen 443 ssl http2;
        server_name admin.autovideo.local;

        # SSL 證書
        ssl_certificate /etc/nginx/ssl/autovideo.crt;
        ssl_certificate_key /etc/nginx/ssl/autovideo.key;

        # 限制訪問來源
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;

        # 監控面板
        location / {
            proxy_pass http://monitoring_backend/;
            include /etc/nginx/proxy_params;
            
            # 監控面板設定
            proxy_read_timeout 60s;
            proxy_connect_timeout 10s;
        }
    }

    # ================================
    # 快取配置
    # ================================

    # 快取路徑配置
    proxy_cache_path /var/cache/nginx/frontend levels=1:2 keys_zone=frontend_cache:10m 
                     max_size=100m inactive=60m use_temp_path=off;
    
    proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:10m 
                     max_size=500m inactive=7d use_temp_path=off;

    # ================================
    # 通用 Proxy 參數
    # ================================

    # WebSocket 連接映射
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
}

# 包含額外配置檔案
include /etc/nginx/conf.d/*.conf;