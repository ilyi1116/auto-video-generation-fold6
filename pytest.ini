# Enhanced pytest configuration for performance optimization
[tool:pytest]
minversion = 7.0

# Test discovery
testpaths = 
    src/services/*/tests
    tests

# Performance optimization
addopts = 
    -ra
    --strict-markers
    --strict-config
    --tb=short
    --cov=src
    --cov-branch
    --cov-report=term-missing:skip-covered
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80
    # Parallel testing - adjust based on CPU cores
    -n auto
    # Smart test collection
    --lf
    --ff
    # Performance monitoring
    --durations=10
    --durations-min=1.0

# Test markers for categorization
markers =
    unit: Unit tests - fast, isolated tests
    integration: Integration tests - test service interactions
    e2e: End-to-end tests - full system tests (slow)
    slow: Slow tests - typically >5 seconds
    api: API endpoint tests
    database: Database interaction tests
    auth: Authentication and authorization tests
    security: Security-related tests
    performance: Performance benchmark tests
    smoke: Smoke tests for basic functionality

# Async configuration
asyncio_mode = auto

# Test timeout (prevent hanging tests)
timeout = 300
timeout_method = thread

# Warnings configuration
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    error::sqlalchemy.exc.SAWarning

# Logging
log_level = INFO
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test environment variables
env =
    TESTING = true
    DATABASE_URL = sqlite:///./test.db
    REDIS_URL = redis://localhost:6379/15
    JWT_SECRET_KEY = test-secret-key-for-testing-only
    LOG_LEVEL = DEBUG