version: '3.8'

services:
  admin-api:
    build: .
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgresql://admin:admin123@postgres:5432/admin_db
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - SECRET_KEY=your-secret-key-change-in-production
      - ENCRYPTION_KEY=your-encryption-key-change-in-production
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
      - ./backups:/app/backups
    networks:
      - admin-network
    restart: unless-stopped

  celery-worker:
    build: .
    command: celery -A celery_app worker --loglevel=info --queues=crawler,trends,maintenance,notifications
    environment:
      - DATABASE_URL=postgresql://admin:admin123@postgres:5432/admin_db
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
      - ./backups:/app/backups
    networks:
      - admin-network
    restart: unless-stopped

  celery-beat:
    build: .
    command: celery -A celery_app beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://admin:admin123@postgres:5432/admin_db
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - admin-network
    restart: unless-stopped

  celery-flower:
    build: .
    command: celery -A celery_app flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    depends_on:
      - redis
    networks:
      - admin-network
    restart: unless-stopped

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=admin_db
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - admin-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - admin-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - admin-api
    networks:
      - admin-network
    restart: unless-stopped

networks:
  admin-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: